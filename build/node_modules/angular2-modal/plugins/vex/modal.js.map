{"version":3,"file":"modal.js","sourceRoot":"","sources":["../../../../src/components/angular2-modal/plugins/vex/modal.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/first';\n\nimport { Injectable, ResolvedReflectiveProvider as RRP } from '@angular/core';\n\nimport {\n  ContainerContent,\n  Maybe,\n  Overlay,\n  DialogRef,\n  DROP_IN_TYPE,\n  Modal as Modal_,\n  CSSBackdrop,\n  CSSDialogContainer,\n  PromiseCompleter\n} from '../../../../components/angular2-modal';\n\nimport { DropInPresetBuilder } from './presets/dropin-preset';\n\n\n\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.alert, {isBlocking: false} as any);\n  }\n\n  prompt(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.prompt, {\n      isBlocking: true,\n      keyboard: null\n    }  as any);\n  }\n\n  confirm(): DropInPresetBuilder {\n    return new DropInPresetBuilder(this, DROP_IN_TYPE.confirm, {\n      isBlocking: true,\n      keyboard: null\n    }  as any);\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   content: ContainerContent,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    const backdropRef = this.createBackdrop(dialogRef, CSSBackdrop);\n    const containerRef = this.createContainer(dialogRef, CSSDialogContainer, content, bindings);\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = backdropRef.instance;\n    let container = containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (!document.body.classList.contains('vex-open')) {\n      document.body.classList.add('vex-open');\n    }\n\n    overlay.addClass(`vex vex-theme-${dialogRef.context.className}`);\n    backdrop.addClass('vex-overlay');\n    container.addClass(dialogRef.context.contentClassName);\n    container.setStyle('display', 'block');\n    if (dialogRef.inElement) {\n      overlay.setStyle('padding', '0');\n      container.setStyle('margin-top', '20px');\n    }\n\n    if (containerRef.location.nativeElement) {\n      containerRef.location.nativeElement.focus();\n    }\n\n    if (dialogRef.context.className === 'bottom-right-corner') {\n      overlay.setStyle('overflow-y', 'hidden');\n      container.setStyle('position', 'absolute');\n    }\n\n    overlay.beforeDestroy(() => {\n      overlay.addClass('vex-closing');\n      const completer = new PromiseCompleter<void>();\n\n      let animationEnd$: Observable<any> = container.myAnimationEnd$();\n      if (dialogRef.context.className !== 'bottom-right-corner') {\n        animationEnd$ = animationEnd$.combineLatest(backdrop.myAnimationEnd$(), (s1, s2) => [s1,s2] );\n      }\n\n      animationEnd$.subscribe( sources => {\n        this.overlay.groupStackLength(dialogRef) === 1 && document.body.classList.remove('vex-open');\n        completer.resolve();\n      });\n\n      return completer.promise;\n    });\n\n\n    overlay.setClickBoundary(containerRef.location.nativeElement);\n\n    return dialogRef;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: Overlay, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}